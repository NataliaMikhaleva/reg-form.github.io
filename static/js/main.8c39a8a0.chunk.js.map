{"version":3,"sources":["components/Name.js","components/Greeting.js","components/App.js","reportWebVitals.js","index.js"],"names":["Name","props","className","isVisible","name","onSubmit","handleNextForm","children","type","value","Greeting","surename","patronymic","dateOfBirth","email","App","React","useState","isUserDataVisible","setisUserDataVisible","isUserEmailVisible","setisUserEmailVisible","isUserPasswordVisible","setisPasswordVisible","isGreetingVisible","setIsGreetingVisible","isErrorVisible","setIsErrorVisible","surname","userDataInputsValue","setUserDataInputsValue","userEmailInputValue","setUserEmailInputValue","passwordInputValue","setPasswordInputValue","comparedPasswordInputValue","setComparedPasswordInputValue","event","preventDefault","userdata","document","forms","correctDate","Date","toLocaleDateString","updateUserData","required","placeholder","minLength","userEmail","useremail","pattern","console","log","userPassword","userpassword","comparedpassword","setCustomValidity","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c39a8a0.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\n\r\nfunction Name(props) {\r\n  return (\r\n   <div className={props.isVisible ? `userInfo userInfo_type_${props.name}` : \"userInfo userInfo_not-visible\"}>\r\n      <h3 className=\"userInfo__title\">Введите данные</h3>\r\n      <form className=\"userInfo__form\" name={props.name} onSubmit={props.handleNextForm}>\r\n        {props.children}\r\n        <input type=\"submit\" value=\"Далее\" className=\"userInfo__button\"></input>\r\n      </form>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Name;","import React from 'react';\r\nimport '../index.css';\r\n\r\nfunction Greeting(props) {\r\n    return (\r\n     <div className={props.isVisible ? `userInfo userInfo_type_${props.name}` : \"userInfo userInfo_not-visible\"}>\r\n        <h3 className=\"userInfo__title\">Поздравляем с успешным вводом данных!</h3>\r\n        <p>Имя: {props.name}</p>\r\n        <p>Фамилия: {props.surename}</p> \r\n        <p>Отчество: {props.patronymic}</p> \r\n        <p>Дата рождения: {props.dateOfBirth}</p>\r\n        <p>Email: {props.email}</p>\r\n            \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Greeting;","import React from 'react';\nimport '../index.css';\nimport Name from './Name';\nimport Greeting from './Greeting'\n\nfunction App() {\n  const [isUserDataVisible, setisUserDataVisible] = React.useState(true);\n  const [isUserEmailVisible, setisUserEmailVisible] = React.useState(false);\n  const [isUserPasswordVisible, setisPasswordVisible] = React.useState(false);\n  const [isGreetingVisible, setIsGreetingVisible] = React.useState(false);\n   //стейт для выводя текста ошибки при неправильном вводе пароля\n   const [isErrorVisible, setIsErrorVisible] = React.useState(false);\n\n  //стейт с введенными в форму userdata данными\n  const [userDataInputsValue, setUserDataInputsValue] = React.useState({name: '', surname: '', patronymic: '', dateOfBirth: ''});\n  //стейт с введенными в форму userEmail данными\n  const [userEmailInputValue, setUserEmailInputValue] = React.useState({email: ''});\n   //стейт с введенными в инпут password данными\n   const [passwordInputValue, setPasswordInputValue] = React.useState('');\n   //стейт с введенными в инпут comparedpassword данными\n   const [comparedPasswordInputValue, setComparedPasswordInputValue] = React.useState('');\n  \n\n  //обновляем стейт userDataInputsValue после получения данных из компонента Name (форма username)\n  function updateUserData(name, surename, patronymic, dateOfBirth) {\n    const correctDate = new Date(dateOfBirth).toLocaleDateString();\n    setUserDataInputsValue({name: name, surname: surename, patronymic: patronymic, dateOfBirth: correctDate});\n  }\n\n  //обновляем стейт userEmailInputValue после получения данных из компонента Name (форма useremail)\n  function updateUserEmail(email) {\n    setUserEmailInputValue({email: email});\n  }\n\n  // обрабатываем событие submit на форме userdata\n  function handleUserDataForm(event) {\n    event.preventDefault();\n    const userdata = document.forms.userdata;\n    setisUserDataVisible(false);\n    setisUserEmailVisible(true);\n    updateUserData(userdata.name.value, userdata.surname.value, userdata.patronymic.value, userdata.dateOfBirth.value,)\n  }\n\n  // обрабатываем событие submit на форме useremail\n  function handleUserEmailForm(event) {\n    event.preventDefault();\n    const userEmail = document.forms.useremail;\n    event.preventDefault();\n    setisUserEmailVisible(false);\n    setisPasswordVisible(true);\n    updateUserEmail(userEmail.email.value);\n    \n  }\n\n\n   //обновляем стейт passwordInputValue\n   function updatePassword(event) {\n    //const password = document.forms.userpassword.password.value;\n    // setPasswordInputValue({\n    //   ...passwordInputValue,\n    //   password: password\n    // });\n    setPasswordInputValue(event.target.value);\n    //console.log(passwordInputValue);\n  }\n\n   //обновляем стейт comparedPasswordInputValue\n    function updateComparedPassword(event) {   \n       //const comparedpassword = document.forms.userpassword.comparedpassword.value;\n      //  setComparedPasswordInputValue({\n      //    ...comparedPasswordInputValue,\n      //    comparedPassword: comparedpassword\n      //  });\n      setComparedPasswordInputValue(event.target.value);\n      //console.log(comparedPasswordInputValue);\n    }\n\n  //обрабатываем событие submit на форме userpassword\n  function handleUserPasswordForm(event) {\n    event.preventDefault();\n    console.log('!');\n    const userPassword = document.forms.userpassword;\n    console.log(passwordInputValue);\n    console.log(comparedPasswordInputValue);\n    if(passwordInputValue !== comparedPasswordInputValue) {\n      console.log('!!');\n      setIsErrorVisible(true);\n      //userPassword.comparedpassword.setCustomValidity('Пароли не совпадают');\n      // setPasswordInputValue({});\n      // setComparedPasswordInputValue({});\n      \n    } else{\n      userPassword.comparedpassword.setCustomValidity('');\n      setisPasswordVisible(false);\n      setIsGreetingVisible(true);\n      }\n     // console.log(passwordInputValue);\n      //console.log(comparedPasswordInputValue);\n  }\n\n  return (\n    <div className=\"page\">\n     <Name name=\"userdata\" handleNextForm={handleUserDataForm} isVisible={isUserDataVisible} children={\n       <>        \n        <input type=\"text\" name=\"name\" className=\"userInfo__input\"  required placeholder=\"Имя\" minLength=\"2\"/>\n        <input type=\"text\" name=\"surname\" className=\"userInfo__input\" required placeholder=\"Фамилия\" minLength=\"2\" /> \n        <input type=\"text\" name=\"patronymic\" className=\"userInfo__input\" required placeholder=\"Отчество\" minLength=\"2\" />\n        <input type=\"date\" name=\"dateOfBirth\" className=\"userInfo__input\"  placeholder=\"Дата рождения\" required />               \n     </>\n     }/> \n\n     <Name name=\"useremail\" handleNextForm={handleUserEmailForm} isVisible={isUserEmailVisible} children={\n       <>        \n        <input type=\"email\" name=\"email\" className=\"userInfo__input\"  required placeholder=\"Email\" pattern=\"[a-z](\\w*[a-z]|\\d?)*((-\\w*[a-z])?)*@\\w+(-\\w+)?.\\w+((.\\w+)?)*\"/>              \n     </>\n     }/> \n\n    <Name name=\"userpassword\" handleNextForm={handleUserPasswordForm} isVisible={isUserPasswordVisible} children={\n       <>        \n        <input type=\"password\" name=\"password\" value={passwordInputValue} className=\"userInfo__input\"  required placeholder=\"Пароль\" minLength=\"6\" onChange={updatePassword}/>\n        <div className=\"userInfo__container\">\n          <input type=\"password\" name=\"comparedpassword\" value={comparedPasswordInputValue} className=\"userInfo__input\" placeholder=\"Подтвердите пароль\" onChange={updateComparedPassword} required minLength=\"6\"/>\n          <span className={isErrorVisible ? \"errortext errortext_visible\" : \"errortext errortext_hidden\"}>Пароли не совпадают</span>    \n        </div>\n                 \n     </>\n     }/>\n    \n    <Greeting isVisible={isGreetingVisible} name={userDataInputsValue.name} surename={userDataInputsValue.surname} patronymic={userDataInputsValue.patronymic} dateOfBirth={userDataInputsValue.dateOfBirth} email={userEmailInputValue.email}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}